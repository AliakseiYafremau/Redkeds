stages:
  - check

image: alpine:latest

variables:
  PYTHON_VERSION: "3.11"
  UV_LINK_MODE: copy
  UV_CACHE_DIR: .uv-cache

lint:
  stage: check
  image: ghcr.io/astral-sh/uv:python$PYTHON_VERSION-alpine
  cache:
    - key:
        files:
          - uv.lock
      paths:
        - $UV_CACHE_DIR
    - key:
        files:
          - pyproject.toml
      paths:
        - .ruff_cache
        - .venv
  script:
    - uv venv
    - source .venv/bin/activate
    - uv sync --frozen --only-group lint
    - ruff check .
    - uv cache prune --ci
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

type-check:
  stage: check
  image: ghcr.io/astral-sh/uv:python$PYTHON_VERSION-alpine
  cache:
    - key:
        files:
          - uv.lock
      paths:
        - $UV_CACHE_DIR
    - key:
        files:
          - pyproject.toml
      paths:
        - .mypy_cache
        - .venv
  script:
    - uv venv
    - source .venv/bin/activate
    - uv sync --frozen --only-group type-check
    - mypy .
    - uv cache prune --ci
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

tests:
  stage: check
  image: ghcr.io/astral-sh/uv:python$PYTHON_VERSION-alpine
  cache:
    - key:
        files:
          - uv.lock
      paths:
        - $UV_CACHE_DIR
    - key:
        files:
          - pyproject.toml
      paths:
        - .pytest_cache
        - .venv
  script:
    - uv venv
    - source .venv/bin/activate
    - uv sync --frozen --only-group test
    - pytest
    - uv cache prune --ci
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'